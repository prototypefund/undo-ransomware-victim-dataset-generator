<?xml version="1.0" encoding="UTF-8"?>

<office:document xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:config="urn:oasis:names:tc:opendocument:xmlns:config:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:tableooo="http://openoffice.org/2009/table" xmlns:drawooo="http://openoffice.org/2010/draw" xmlns:calcext="urn:org:documentfoundation:names:experimental:calc:xmlns:calcext:1.0" xmlns:loext="urn:org:documentfoundation:names:experimental:office:xmlns:loext:1.0" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" xmlns:formx="urn:openoffice:names:experimental:ooxml-odf-interop:xmlns:form:1.0" xmlns:css3t="http://www.w3.org/TR/css3-text/" office:version="1.2" office:mimetype="application/vnd.oasis.opendocument.text">
 <office:scripts>
  <office:script script:language="ooo:Basic">
   <ooo:libraries xmlns:ooo="http://openoffice.org/2004/office" xmlns:xlink="http://www.w3.org/1999/xlink">
    <ooo:library-embedded ooo:name="Standard">
     <ooo:module ooo:name="FilterList">
      <ooo:source-code>REM  *****  BASIC  *****
&apos; From: https://stackoverflow.com/a/38446103

Sub PrintFilterNames
    oFF = createUnoService( &quot;com.sun.star.document.FilterFactory&quot; )
    oFilterNames = oFF.getElementNames()

    &apos; Now print the filter names.
    &apos; For i = LBound( oFilterNames ) To UBound( oFilterNames )
    &apos; Print oFilterNames(i)
    &apos; Next

    &apos; Create a Writer doc and save the filter names to it.
    oDoc = StarDesktop.loadComponentFromURL(&quot;private:factory/swriter&quot;, &quot;_blank&quot;, 0, Array() )
    oText = oDoc.getText()
    oCursor = oText.createTextCursor()
    oCursor.gotoEnd( False )

    oText.insertString( oCursor, &quot;Filter Names&quot;, False )
    oCursor.ParaStyleName = &quot;Heading 1&quot;
    InsertParaBreak( oText, oCursor )
    oCursor.ParaStyleName = &quot;Standard&quot;
    InsertParaBreak( oText, oCursor )

    &apos; Print the filter names into a Writer document.
    For i = LBound( oFilterNames ) To UBound( oFilterNames )
        oText.insertString( oCursor, oFilterNames(i), False )
        InsertLineBreak( oText, oCursor )
    Next
    InsertParaBreak( oText, oCursor )
    InsertParaBreak( oText, oCursor )
    oText.insertString( oCursor, &quot;Filter Names and their Properties&quot;, False)
    oCursor.ParaStyleName = &quot;Heading 1&quot;
    InsertParaBreak( oText, oCursor )
    oCursor.ParaStyleName = &quot;Standard&quot;

    &apos; Tab stops at:
    &apos; 0.25 inch (2.54 cm x 0.25)
    &apos; 0.50 inch (2.54 cm x 0.50)
    &apos; 2.00 inch (2.54 cm x 2.00)
    oCursor.ParaTabStops = Array(_
        MakeTabStop( 2540 * 0.25 ),_
        MakeTabStop( 2540 * 0.50 ),_
        MakeTabStop( 2540 * 2.00 ) )

    &apos; Print the filter names and their parameters.
    For i = LBound( oFilterNames ) To UBound( oFilterNames )
        InsertParaBreak( oText, oCursor )

        cFilterName = oFilterNames(i)
        aFilterProps = oFF.getByName( cFilterName )

        oText.insertString( oCursor, cFilterName, False )

        For j = LBound( aFilterProps ) To UBound( aFilterProps )
            oFilterProp = aFilterProps(j)

            InsertLineBreak( oText, oCursor )
            oText.insertString( oCursor, CHR(9)+oFilterProp.Name, False )

            nFilterPropValueVarType = VarType( oFilterProp.Value )
            If nFilterPropValueVarType = 8201 Then
            &apos; VarType 8201 means a sequence of PropertyValue&apos;s.
            oFilterPropNames = oFilterProp.Value
            For k = LBound( oFilterPropNames ) To UBound(oFilterPropNames )
                InsertLineBreak( oText, oCursor )
                oText.insertString( oCursor, CHR(9)+CHR(9)+_
                oFilterPropNames(k).Name+CHR(9)+CSTR(oFilterPropNames(k).Value), False )
            Next k
            ElseIf nFilterPropValueVarType = 8200 Then
                &apos; VarType 8200 means a sequence of Strings.
                oFilterPropNames = oFilterProp.Value
                For k = LBound( oFilterPropNames ) To UBound(oFilterPropNames )
                    InsertLineBreak( oText, oCursor )
                    oText.insertString( oCursor, CHR(9)+CHR(9)+ oFilterPropNames(k), False )
                Next k
                ElseIf nFilterPropValueVarType&gt; 1 And nFilterPropValueVarType&lt;= 12 Then
                    oText.insertString( oCursor, CHR(9)+CSTR(oFilterProp.Value), False )
                Else
                oText.insertString( oCursor, CHR(9)+&quot;?? unknown type ?? - &quot;+CSTR(nFilterPropValueVarType), False )

            EndIf
        Next j

        InsertParaBreak( oText, oCursor )
    Next i

    InsertParaBreak( oText, oCursor )
End Sub

Private Sub InsertLineBreak( oText, oCursor )
    oText.insertControlCharacter( oCursor, com.sun.star.text.ControlCharacter.LINE_BREAK, False )
End Sub

Private Sub InsertParaBreak( oText, oCursor )
    oText.insertControlCharacter( oCursor, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False )
End Sub


&apos; Create and return a tab stop.
&apos; An array of what this function returns, is used
&apos; to set the tab stops of a paragraph.
&apos;
&apos; Parameters....
&apos; nPosition - position in tab stop, in 1000&apos;th of cm.
&apos; nAlign - optional, if specified, must be one of...
&apos; com.sun.star.style.TabAlign.LEFT = 0

&apos; com.sun.star.style.TabAlign.CENTER = 1
&apos; com.sun.star.style.TabAlign.RIGHT = 2
&apos; com.sun.star.style.TabAlign.DECIMAL = 3
&apos; com.sun.star.style.TabAlign.DEFAULT = 4

&apos; cDecimalChar - optional, if specified, only applies to a DECIMAL tab stop,
&apos; and specified the character which is recognized as
&apos; the decimal point separator.
&apos; cFillChar - optional, if specified, specifies the char that fills the space
&apos; between tab stops.
Private Function MakeTabStop( ByVal nPosition As Long,_
        Optional nAlign,_
        Optional cDecimalChar,_
        Optional cFillChar _
        ) As com.sun.star.style.TabStop
    If IsMissing( nAlign ) Then
        nAlign = com.sun.star.style.TabAlign.LEFT
    EndIf

    oTabStop = createUnoStruct( &quot;com.sun.star.style.TabStop&quot; )

    oTabStop.Position = nPosition
    oTabStop.Alignment = nAlign

    If Not IsMissing( cDecimalChar ) Then
        oTabStop.DecimalChar = cDecimalChar
    EndIf
    If Not IsMissing( cFillChar ) Then
        oTabStop.FillChar = cFillChar
    EndIf

    MakeTabStop() = oTabStop
End Function
      </ooo:source-code>
     </ooo:module>
    </ooo:library-embedded>
   </ooo:libraries>
  </office:script>
 </office:scripts>
 <office:font-face-decls>
  <style:font-face style:name="Lohit Devanagari1" svg:font-family="&apos;Lohit Devanagari&apos;"/>
  <style:font-face style:name="Liberation Serif" svg:font-family="&apos;Liberation Serif&apos;" style:font-family-generic="roman" style:font-pitch="variable"/>
  <style:font-face style:name="Liberation Sans" svg:font-family="&apos;Liberation Sans&apos;" style:font-family-generic="swiss" style:font-pitch="variable"/>
  <style:font-face style:name="AR PL SungtiL GB" svg:font-family="&apos;AR PL SungtiL GB&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
  <style:font-face style:name="Lohit Devanagari" svg:font-family="&apos;Lohit Devanagari&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
 </office:font-face-decls>
 <office:automatic-styles>
  <style:style style:name="P1" style:family="paragraph" style:parent-style-name="Standard">
   <style:text-properties style:font-name="Liberation Sans"/>
  </style:style>
  <style:style style:name="T1" style:family="text">
   <style:text-properties fo:font-style="italic" style:font-style-asian="italic" style:font-style-complex="italic"/>
  </style:style>
  <style:page-layout style:name="pm1">
   <style:page-layout-properties fo:page-width="21.001cm" fo:page-height="29.7cm" style:num-format="1" style:print-orientation="portrait" fo:margin-top="2cm" fo:margin-bottom="2cm" fo:margin-left="2cm" fo:margin-right="2cm" style:writing-mode="lr-tb" style:footnote-max-height="0cm">
    <style:footnote-sep style:width="0.018cm" style:distance-before-sep="0.101cm" style:distance-after-sep="0.101cm" style:line-style="solid" style:adjustment="left" style:rel-width="25%" style:color="#000000"/>
   </style:page-layout-properties>
   <style:header-style/>
   <style:footer-style/>
  </style:page-layout>
 </office:automatic-styles>
 <office:master-styles>
  <style:master-page style:name="Standard" style:page-layout-name="pm1"/>
 </office:master-styles>
 <office:body>
  <office:text>
   <text:p text:style-name="P1">Now go to <text:span text:style-name="T1">Extras → Macros → Run Macro</text:span> and run the <text:span text:style-name="T1">PrinterFilterNames</text:span> macro! (It's in <text:span text:style-name="T1">FilterList.fodt → Standard → FilterList</text:span>...)</text:p>
  </office:text>
 </office:body>
</office:document>
